Nov 17

- Toma de contacto
- Empezará contacto con latex
- Empezará con el capÃ­tulo de software y herramientas

1.- Latex, si quieres
2.- Github
     Fichero de Seguimiento
3.- Reuniones Mie 18:00h
4.- Estructura capí­tulos (ir pensando)
5.- CapÃ­tulo A: sofware y herramientas

Referencias y bibliografí­a
ir recopilando la que pudiera entrar en el Capítulo A
--------------------------
Dic 01
Calificación del TFG


5
- Dedicación de 300 horas (12 créditos) al TFG
- Asistencia a las reuniones semanales de seguimiento
- Elaboración de la memoria básica del TFG
- Instalación de todas las herramientas software necesarias para el trabajo
- Realización de una presentación para exponer el TFG ante el tribunal
--
6
- Repositorio de código (github) o similar con código ejecutable
- Especificación de requisitos de la aplicación a desarrollar
--
7
- Desarrollo de varias (2-3) aplicaciones Android simples de ejemplo de funcionamiento
	de algunas funcionalidades de los dispositivos
--
8
- Aplicación operativa en modo emulación, con falta de un 10% de los
	requisitos de LA APLICACIÓN objetivo del TFG
-- 
9
- Aplicación operativa y desplegada en Google Play cumpliendo con el 95% de los requisitos especificados
- Aplicación probada en 3 ó más dispositivos Android diferentes
--
10
- Aplicación completamente finalizada y con funcionalidades avanzadas concretas
- Manual de usuario (capí­tulo de la memoria) de la aplicación
- Conocimiento pleno y demostrable de la aplicación desarrollada
--
Cursar todos los módulos de:
http://developer.android.com/training/index.html
+ 1 - Getting Started
+ 2 - Building Apps with Content Sharing
+ 3 - Building Apps with Multimedia
+ 4 - Building Apps with Graphics & Animation
+ 5 - Building Apps with Connectivity & the Cloud

- Propuesta de aplicación: Red social para senderismo

--------------------------
Dic 10

Hizo todos los módulos de:
- Getting Started
- Building Apps with Content Sharing
- Building Apps with Multimedia (falta una parte, el último, printing content).


- Googlear buscando apps (Android) para "gestión" de colegios
=======
-/ Googlear buscando apps (Android) para "gestión" de colegios:
	La mayoría son de un solo colegio o este tiene que contratar o usar alguna plataforma virtual específica.
	--Micolegioapp
	--Paramicolegio
	--Plataforma mi cole
	--Mi cole - papas
	--MySchool! Doccenti--Colegio Padre Dehon
	--MySchool!
	--Colegio Delta
	--MySchool! Genitori smartphone
	--FUCN Virtual
	--Colegio Ciudad del Mar
	--Myschool Chat
	--Stella Maris
	--Colegio Marista Castilla
	--CSApp - Colegio San Agustín
	--Colegio Romualdo Ballester
	--Colegio Jaime Balmes
	--Colégio Santo Américo
	--UESD
	--Colegio Teresiano América
	--Colegio Edith Stein
	--Colegio San Antonio de Padua
	--Colegio Los Pinos
	--El Encinar
	--Mi Escuela (Escuela de las artes y la tecnología)
	--Colegio San Enrique
	--COLEGIO BLESS
	--Colegio San Juan Evangelista
	--Colegio Parque
	--Colegio Slam Miami
	--Meridian Mihir MySchool
	--Mi Cole Andaluz Lite (No tiene que ver pero su funcionalidad es interesante)
	--EduFile Viewer (no tiene mucho que ver pero me parece curioso eso de trabajar con ficheros edufile)


- Echar un vistazo (registro, etc.) a miColegioApp
-/ Asegúrate de cargar en el repositorio todos los tutoriales que hayas completado
-/ Asegúrate de anotar todo lo necesario para reproducir en mi despacho tus resultados:
	-- Android studio no render target:
		Asegurarse de que hay un dispositivo seleccionado
		Asegurarse de que hay un version de android seleccionada
		Asegurarse de tener todo lo del SDK(Versiones necesarias de Android) instalado
		Crear un nuevo Dispositivo Virtual(AVD)
		Reiniciar Android Studio
	--Appcompact no compatible
		Cambiar fichero build.gradle en app/:
			compile 'com.android.support:support-v4:21.0.0'

- Completar los tutoriales que faltan de la lista anterior.


Si te queda tiempo/ganas:
- Best Practices for Security & Privacy
- Best Practices for Testing

-/ Identificar en qué aspectos necesitas profundizar:
	--BBDD en la nuve
	--Mandar notificaciones y mensajes tipo Whatsapp entre dispositivos
--------------------------
Dic 17

- Hasta ahora va por los tutoriales y el último (todavía sin completar) es:
  Building Apps with Graphics & Animation

Trabajo futuro:
- Acabar TODOS los tutoriales
   + 4 - Building Apps with Graphics & Animation
   + 5 - Building Apps with Connectivity & the Cloud
   6 - Best Practices for Security & Privacy
   7 - Best Practices for Testing
	 8 (nuevo) Data Storage.  http://developer.android.com/guide/topics/data/index.html
- Instala Android Studio 1.0 (compatibilidad con mi despacho). Arregla todos
	los tutoriales si hay problemas con la nueva versión.
- Mete el latex de la memoria (no los pdf) en el repositorio. Recuerda ir
	tomando notas.
--------------------------
Ene 14

- Ha encontrado (y estudiado) un tutorial sobre Google Cloud messaging:
2014-2015_GonzaloGarcíaAndroid/

- Va por el tutorial 6. Faltan 7 y 8
- Localizar y echar un vistazo a cómo resuelven el problema 'BD' en la aplicación shorcial
- Buscar más apps con código disponible públicamente
- Primer borrador de: Especificación de requisitos de la app que desarrollaremos como resultado
	del proyecto. Esto A LA MEMORIA.
--------------------------
Ene 21

- Avances: 
+ Ha terminado tutorial 6. ha hecho el tutorial 7. Falta corregir un error.
+ Tiene un borrador (papel) de las pantallas (Layouts) probables para la app a
  diseñar (Colegio)

- Trabajo Futuro:
+ Tutorial 8
+ Localizar y echar un vistazo a cómo resuelven el problema 'BD' en la aplicación shorcial
+ Buscar más apps con código disponible públicamente
+ Primer borrador de: Especificación de requisitos de la app que
  desarrollaremos como resultado
  del proyecto. Esto A LA MEMORIA.

- Referencias (futuro)
* http://www.nosinmiubuntu.com/2012/12/notificaciones-push-i.html
* https://parse.com/products/push
--------------------------
Ene 29
- Avances: 

- Trabajo Futuro:
1+ Detallar en mayor grado la especificación de requisitos: definir con cierto
  grado de detalle, las funcionalidades que se pretende implementar.
  Detallar con el mayor nivel posible los Layouts y pantallas que se van a
	usar para cada funcionalidad.
	Ir pensando en Diagramas UML para la app.
2+ Echar un vistazo a las tripas de apps con source code para ver qué usan.
3+ Google Cloud Computing + Android:
   https://cloud.google.com/appengine/docs/whatisgoogleappengine
4* Tutorial Volley
5* Firebase
--------------------------
Feb 11
- Trabajo Futuro:
	+ Ir pensando en Diagramas UML para las clases que aparecen en la app.
	* Tutorial (aprender como sea) Google Cloud Computing + Android: 
	* Echar un vistazo a Google Cloud SQL a ver si es lo que necesitas
  * Tutorial Volley (librería de shorcial para comm. con el servidor)
	+ Diseñar (1ª versión) de los Layouts más "evientes" de la app.
--------------------------
Feb 20
- Trabajo Futuro:
  - Incluir en la memoria algún apartado donde hables de 'Apps similares'
	  donde describas mínimamente las funcionalidades (copia algún pantallazo)
	  de apps similares a collegeApp: Remind, MiCoñlegioApp.
		Esto iría como apartado en un capitulo de Descripción de collegeApp.
  + Evaluar Firebase para ver si "es tu solución". Si lo es, go ahead:
	  tutorial (si necesitas), ¡a meter datos en la nube!
	+ Hacer (aunque sea a mano) un diagrama de Activities de collegeApp
	- Añadir estética y funcionalidades 'realistas' a las diferentes pantallas.
--------------------------
Feb 25
- Trabajo Futuro
  - A desarrollar funcionalidades 'realistas' al 80%

--------------------------
--------------------------
--------------------------

